apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.8
targetCompatibility = 1.8

archivesBaseName = "unxml"
group   = 'com.nerdforge'
version = '0.9-SNAPSHOT'
isReleaseVersion=version.toString().contains("-SNAPSHOT")

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.6.1'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.6.1'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.6.1'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.6.1'
    compile group: 'com.google.inject', name: 'guice', version: '4.0'
    compile group: 'com.google.inject.extensions', name: 'guice-assistedinject', version: '4.0'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.12'
    compile group: 'xerces', name: 'xercesImpl', version: '2.11.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.easytesting', name: 'fest-assert', version: '1.4'
    testCompile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.12'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            def user = hasProperty('ossrhUsername') ? ossrhUsername : System.getenv('ossrhUsername')
            def pass = hasProperty('ossrhPassword') ? ossrhPassword : System.getenv('ossrhPassword')

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: user, password: pass)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: user, password: pass)
            }

            pom.project {
                name 'unXml'
                packaging 'jar'
                description 'Java 8 library that transforms XML to JSON.'
                url 'https://github.com/tajakobsen/unxml'

                scm {
                    connection 'scm:git:https://github.com/tajakobsen/unxml.git'
                    developerConnection 'scm:git:https://github.com/tajakobsen/unxml.git'
                    url 'https://github.com/tajakobsen/unxml'
                }

                licenses {
                    license {
                        name 'GNU General Public License, version 2'
                        url 'http://www.gnu.org/licenses/old-licenses/gpl-2.0.html'
                    }
                }

                developers {
                    developer {
                        id 'tajakobsen'
                        name 'Tom Arild Jakobsen'
                        email 'tajakobsen@gmail.com'
                    }
                }
            }
        }
    }
}